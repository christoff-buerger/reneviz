package org.tud.reneviz.model;


import com.hp.hpl.jena.rdf.model.Model;
import com.hp.hpl.jena.rdf.model.ModelFactory;
import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;
 
/**
 * Vocabulary definitions from reneviz.owl 
 * @author Auto-generated by schemagen on 07 Okt 2013 12:06 
 */
public class Reneviz {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.semanticweb.org/jm/ontologies/2013/9/reneviz#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    public static final Resource Facet = m_model.createResource( NS + "Facet" );
    
    public static final Property propertySequence = m_model.createProperty( NS + "propertySequence" );
    
    public static final Property facetType = m_model.createProperty( NS + "facetType" );
    
    public static final Property hasTopic = m_model.createProperty( NS + "hasTopic" );
    
    public static final Property hasCluster = m_model.createProperty( NS + "hasCluster" );
    
    public static final Resource Cluster = m_model.createResource( NS + "Cluster" );

    public static final Property hasMember = m_model.createProperty( NS + "hasMember" );
    
    public static final Property size = m_model.createProperty( NS + "size" );
    
    public static final Property hasReason = m_model.createProperty( NS + "hasReason" );
    
}
